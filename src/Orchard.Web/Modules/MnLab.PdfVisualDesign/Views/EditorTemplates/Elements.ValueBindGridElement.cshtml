@using MnLab.PdfVisualDesign
@using MnLab.PdfVisualDesign.ViewModels
@using MnLab.PdfVisualDesign.Binding
@using MnLab.PdfVisualDesign.Binding.Elements

@model ValueBindGridViewModel
@{
    /**/

    Script.Require("handsontable").AtHead();
    Style.Require("handsontable").AtHead();

    Script.Require("AngularJs_Full").AtHead();


    Script.Require("common").AtHead();
    Script.Require("handsontable_custom").AtHead();

    //manifest.DefineScript("Layouts.Lib").SetDependencies("jQuery", "AngularJs_Full", "Underscore");


    var design = Model.DesignData;
    var BindingDefSources = Model.BindingDefSources?.SelectMany(x => x);

    var ValueMaps = Model.ValueMaps;


    var bs1 = BindingDefSources?.Select(x => new {
        x.ContentPartName,
        x.MemberExpression,
        x.Key,
        BindType = "DisplayName",
    });
    var bs2 = BindingDefSources?.Select(x => new {
        x.ContentPartName,
        x.MemberExpression,
        x.Key,
        BindType = "Value",
    });

    var bs = bs1.Concat(bs2);//.Where(x=>x.ContentPartName!=null);
}

@*<script src="https://cdn.jsdelivr.net/npm/handsontable@7.0.0/dist/handsontable.full.min.js"></script>
    <link type="text/css" rel="stylesheet" href="https://cdn.jsdelivr.net/npm/handsontable@7.0.0/dist/handsontable.full.min.css">*@


@{
    var AllCellValues = design?.AllCellValues;
    var mergedCells = design?.MergedCells;
    var uniqueId = Guid.NewGuid().ToString("N");

    var gridTypes = new[] {
        new SelectListItem() {Text = T("Please choose").Text}
    }
        .Concat(new[] {"Table", "ULList", "OLList"}
            .Select(x => new SelectListItem() {Value = x, Text = x, Selected = x == design?.GridType}));
}

<fieldset>
    <legend>Grid Type Setting</legend>
    @*<input name="" />*@
    @Html.DropDownListFor(x => x.DesignData.GridType, gridTypes)
    @Html.TextBoxFor(x => x.DesignData.DisplayType)
</fieldset>

<div id="handsontable-@(uniqueId)" class="hot handsontable htRowHeaders htColumnHeaders"></div>


<script>
    (function() {

    var ValueMaps = [
                @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ValueMaps, Newtonsoft.Json.Formatting.Indented)))
            ][0];
        var AllCellValues = [
            @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(AllCellValues, Newtonsoft.Json.Formatting.Indented)))
        ][0];
        var mergedCells = [
            @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(mergedCells, Newtonsoft.Json.Formatting.Indented)))
        ][0];


     



        //var manufacturerData = [
        //        { name: 'BMW', country: 'Germany', owner: 'Bayerische Motoren Werke AG' },
        //        { name: 'Chrysler', country: 'USA', owner: 'Chrysler Group LLC' },
        //        { name: 'Nissan', country: 'Japan', owner: 'Nissan Motor Company Ltd' },
        //        { name: 'Suzuki', country: 'Japan', owner: 'Suzuki Motor Corporation' },
        //        { name: 'Toyota', country: 'Japan', owner: 'Toyota Motor Corporation' },
        //        { name: 'Volvo', country: 'Sweden', owner: 'Zhejiang Geely Holding Group' }
        //];

        /*
        [
        {"ContentPartName":"Page","MemberExpression":"Choice1","DefaultValue":null,"Description":null,"Remark":null,"Key":"Page.Choice1"}
        ],
        */

        //var data = Handsontable.helper.createSpreadsheetData(10, 10);

        var manufacturerData = [@(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(bs)))][0];

        var uniqueId = ['@(uniqueId)'][0];
        var container = document.getElementById('handsontable-@(uniqueId)');
        var girdTable = handsontableHelper.createDesignTable(container,uniqueId,AllCellValues, ValueMaps,mergedCells ,manufacturerData);
        girdTable.hot = girdTable;

    })();
</script>


<div ng-app="ValueBindGrid_@(uniqueId)">

    <div ng-controller="ValueBindGridController_@(uniqueId)">
        <input name="@Html.NameFor(x => x.DesignData.AllCellValues)" ng-model="AllCellValues_JSON"/>
        <input name="@Html.NameFor(x => x.DesignData.MergedCells)" ng-model="mergedCells_JSON"/>
    </div>
</div>


@using (Script.Foot()) {
    <script type="text/javascript">
        $(function() {


        });
    </script>
}