@using MnLab.PdfVisualDesign
@using MnLab.PdfVisualDesign.ViewModels
@using MnLab.PdfVisualDesign.Binding
@using MnLab.PdfVisualDesign.Binding.Elements
@{

    // 这个页面因为是js异步的，所以导致 design 页面无法正确计算高度，可以考虑用 chrome headless 执行后获取得到的 html 然后进行输出显示，或者找找 cms 有没有现成的 API

    // return;

    Script.Require("handsontable").AtHead();
    Style.Require("handsontable").AtHead();


    Script.Require("common").AtHead();
    Script.Require("handsontable_custom").AtHead();

    ValueBindGridViewModel ViewModel = Model?.ViewModel;
    ValueBindGridData design = ViewModel?.DesignData;
    var ValueMaps = ViewModel?.ValueMaps;
    var DesignCellValues = design?.AllCellValues;
    var mergedCells = design?.MergedCells;
    var columnHeaderTexts = design?.HeaderTexts;
    var uniqueId = Guid.NewGuid().ToString("N");
}

<div id="handsontable-@(uniqueId)" class="hot handsontable htRowHeaders htColumnHeaders"></div>
@{
    //@using (Script.Foot()){
    <script>


        (function() {

            // the design page first load data is correct ,but after the element edit form save, the element view design refresh (the data re retrive then get null data of each valueMaps item)
            var valueMaps = [
                @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ValueMaps, Newtonsoft.Json.Formatting.Indented)))
            ][0];
            var allCellValues = [
                @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(DesignCellValues, Newtonsoft.Json.Formatting.Indented)))
            ][0];
            var mergedCells = [
                @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(mergedCells, Newtonsoft.Json.Formatting.Indented)))
            ][0];
                var columnHeaderTexts = [
                @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(columnHeaderTexts, Newtonsoft.Json.Formatting.Indented)))
            ][0]||[];
            var uniqueId = ['@(uniqueId)'][0];

            var gridType = ['@(design?.GridType)'][0];
            var DisplayType = ['@(design?.DisplayType)'][0];

            if (gridType == 'table') {
            }


            //var columnNameDef = {
            //    renderer: handsontableHelper.createRender(null, valueMaps, Handsontable.renderers.TextRenderer),
            //};
            //var columnValueDef = {
            //    renderer: handsontableHelper.createRender(null, valueMaps, Handsontable.renderers.TextRenderer),
            //};

            var columns = [];
            if (columnHeaderTexts) {
                for (var i = 0; i < columnHeaderTexts.length; i++) {
                    columns.push({
                        renderer: handsontableHelper.createRender(null, valueMaps, Handsontable.renderers.TextRenderer),
                    });
                }
            }

            /*
            hot.updateSettings({
          colHeaders: ['A','B','C']
        });
            */

            var tableCfg = {
                licenseKey: 'non-commercial-and-evaluation',
                data: allCellValues,
                mergeCells: mergedCells || [],
                //  colWidths: [47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47],
                rowHeaders: true,
                colHeaders: true,
                contextMenu: false,
                // header 分为：属性名字列 和 属性值列，列头在设计页面要可以自定义
                //colHeaders: ['Data Member (First Column)', 'Data Member (Second Column)'],
                colHeaders: columnHeaderTexts,//['Data Member (Name)', '', 'Data Member (Second Column)', ''],
                columns: columns,//[columnNameDef, columnValueDef, columnNameDef, columnValueDef]
            };

            $(function() {
                var interval = setInterval(function() {
                        var container = document.getElementById('handsontable-@(uniqueId)');
                        if (container) {
                            // debugger
                            clearInterval(interval);

var handsontableHelper = new HandsontableCustomHelper();
                             var girdTable = handsontableHelper.createDesignTable(container, {
            uniqueId,allCellValues, valueMaps,mergedCells ,columnHeaderTexts
        });
                          //  girdTable = new Handsontable(container, tableCfg);
                            girdTable.hot = girdTable;
                        }

                    },
                    500);

            });
        })();

    </script>
}
<p></p>
<p></p>
<p></p>